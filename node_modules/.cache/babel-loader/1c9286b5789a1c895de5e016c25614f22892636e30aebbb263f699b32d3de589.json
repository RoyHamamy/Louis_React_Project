{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Louis\\\\src\\\\components\\\\auth\\\\RegisterForm.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport ErrorOverlay from \"../overlays/ErrorOverlay\";\nimport SuccessOverlay from \"../overlays/SuccessOverlay\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./RegisterForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterForm = props => {\n  _s();\n  const history = useHistory();\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const secondPasswordInputRef = useRef();\n  const confirmHandler = () => {\n    setError(\"\");\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    setIsLoading(true);\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    const secondEnteredPassword = secondPasswordInputRef.current.value;\n    if (enteredPassword !== secondEnteredPassword) {\n      setError(\"Passwords do not match.\");\n      setIsLoading(false);\n    } else {\n      fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyD1eWxzoG3H8esJAVOBkU3c4JAFNu_L3ws\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        if (res.ok) {\n          setSuccess(true);\n          props.onLogin();\n        } else {\n          return res.json().then(data => {\n            let errorMessage = \"Invalid Email or Password...\";\n            if (data && data.error && data.error.message) {\n              errorMessage = data.error.message;\n            }\n            setIsLoading(false);\n            setError(errorMessage);\n          });\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [success && /*#__PURE__*/_jsxDEV(SuccessOverlay, {\n      text: \"Success! Now, Please Login.\",\n      onConfirm: () => {\n        history.replace(\"/login\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), error !== \"\" && /*#__PURE__*/_jsxDEV(ErrorOverlay, {\n      text: error,\n      onConfirm: confirmHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.questions,\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Please enter your email address :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Please enter a password :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Please enter password again :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          ref: secondPasswordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Please make sure that you type a valid Email Addres,\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"As well as a Password with a minimum length of 6.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.btn,\n          children: \" Sign Me Up ! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterForm, \"w4TCjBhDBOWFSpUknE8VGrjy8C8=\", false, function () {\n  return [useHistory];\n});\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["useRef","useState","useHistory","ErrorOverlay","SuccessOverlay","LoadingSpinner","classes","RegisterForm","props","history","success","setSuccess","error","setError","isLoading","setIsLoading","emailInputRef","passwordInputRef","secondPasswordInputRef","confirmHandler","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","secondEnteredPassword","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","onLogin","json","data","errorMessage","message","replace","container","questions","btn"],"sources":["C:/Users/User/Desktop/Louis/src/components/auth/RegisterForm.js"],"sourcesContent":["import { useRef, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ErrorOverlay from \"../overlays/ErrorOverlay\";\r\nimport SuccessOverlay from \"../overlays/SuccessOverlay\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\nimport classes from \"./RegisterForm.module.css\";\r\n\r\nconst RegisterForm = (props) => {\r\n  const history = useHistory();\r\n  const [success, setSuccess] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const emailInputRef = useRef();\r\n  const passwordInputRef = useRef();\r\n  const secondPasswordInputRef = useRef();\r\n\r\n  const confirmHandler = () => {\r\n    setError(\"\");\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n    const enteredEmail = emailInputRef.current.value;\r\n    const enteredPassword = passwordInputRef.current.value;\r\n    const secondEnteredPassword = secondPasswordInputRef.current.value;\r\n\r\n    if (enteredPassword !== secondEnteredPassword) {\r\n      setError(\"Passwords do not match.\");\r\n      setIsLoading(false);\r\n    } else {\r\n      fetch(\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyD1eWxzoG3H8esJAVOBkU3c4JAFNu_L3ws\",\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            email: enteredEmail,\r\n            password: enteredPassword,\r\n            returnSecureToken: true,\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      ).then((res) => {\r\n        if (res.ok) {\r\n          setSuccess(true);\r\n          props.onLogin();\r\n        } else {\r\n          return res.json().then((data) => {\r\n            let errorMessage = \"Invalid Email or Password...\";\r\n            if (data && data.error && data.error.message) {\r\n              errorMessage = data.error.message;\r\n            }\r\n            setIsLoading(false);\r\n            setError(errorMessage);\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {success && (\r\n        <SuccessOverlay\r\n          text=\"Success! Now, Please Login.\"\r\n          onConfirm={() => {\r\n            history.replace(\"/login\");\r\n          }}\r\n        />\r\n      )}\r\n      {error !== \"\" && <ErrorOverlay text={error} onConfirm={confirmHandler} />}\r\n      <div className={classes.container}>\r\n        <form className={classes.questions} onSubmit={submitHandler}>\r\n          <h3>Please enter your email address :</h3>\r\n          <br />\r\n          <input type=\"text\" ref={emailInputRef} />\r\n          <br />\r\n          <br />\r\n          <h3>Please enter a password :</h3>\r\n          <br />\r\n          <input type=\"password\" ref={passwordInputRef} />\r\n          <br />\r\n          <br />\r\n          <h3>Please enter password again :</h3>\r\n          <br />\r\n          <input type=\"password\" ref={secondPasswordInputRef} />\r\n          <br />\r\n          <br />\r\n          <label>Please make sure that you type a valid Email Addres,</label>\r\n          <br />\r\n          <label>As well as a Password with a minimum length of 6.</label>\r\n          <br />\r\n          <br />\r\n          {!isLoading && (\r\n            <button className={classes.btn}> Sign Me Up ! </button>\r\n          )}\r\n          {isLoading && <LoadingSpinner />}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}