{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Louis\\\\src\\\\components\\\\auth\\\\LoginForm.js\",\n  _s = $RefreshSig$();\nimport classes from \"./LoginForm.module.css\";\nimport { useRef, useState } from \"react\";\nimport ErrorOverlay from \"../overlays/ErrorOverlay\";\nimport { useHistory } from \"react-router-dom\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = props => {\n  _s();\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const history = useHistory();\n  const confirmHandler = () => {\n    setError(\"\");\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    setIsLoading(true);\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    // Here add validation !!\n\n    fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyD1eWxzoG3H8esJAVOBkU3c4JAFNu_L3ws\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then(data => {\n          let errorMessage = \"Wrong Email or Password!\";\n          throw new Error(errorMessage);\n        });\n      }\n    }).then(data => {\n      props.onLogin(data.idToken);\n      localStorage.setItem(\"token\", data.idToken);\n      history.replace(\"/home\");\n    }).catch(err => {\n      setIsLoading(false);\n      setError(err.message);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error !== \"\" && /*#__PURE__*/_jsxDEV(ErrorOverlay, {\n      text: error,\n      onConfirm: confirmHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.questions,\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Please enter your email address :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Please enter your password :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Please make sure that you type the correct registered Email Address,\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"As well as your correct Password.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.btn,\n          children: \"Log Me In !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 26\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"qB9zXDJSEPD31lxRJCdRa0tPV/M=\", false, function () {\n  return [useHistory];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["classes","useRef","useState","ErrorOverlay","useHistory","LoadingSpinner","LoginForm","props","error","setError","isLoading","setIsLoading","emailInputRef","passwordInputRef","history","confirmHandler","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","errorMessage","Error","onLogin","idToken","localStorage","setItem","replace","catch","err","message","container","questions","btn"],"sources":["C:/Users/User/Desktop/Louis/src/components/auth/LoginForm.js"],"sourcesContent":["import classes from \"./LoginForm.module.css\";\r\nimport { useRef, useState } from \"react\";\r\nimport ErrorOverlay from \"../overlays/ErrorOverlay\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\n\r\nconst LoginForm = (props) => {\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const emailInputRef = useRef();\r\n  const passwordInputRef = useRef();\r\n  const history = useHistory();\r\n\r\n  const confirmHandler = () => {\r\n    setError(\"\");\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n    const enteredEmail = emailInputRef.current.value;\r\n    const enteredPassword = passwordInputRef.current.value;\r\n\r\n    // Here add validation !!\r\n\r\n    fetch(\r\n      \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyD1eWxzoG3H8esJAVOBkU3c4JAFNu_L3ws\",\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          email: enteredEmail,\r\n          password: enteredPassword,\r\n          returnSecureToken: true,\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    )\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          return res.json().then((data) => {\r\n            let errorMessage = \"Wrong Email or Password!\";\r\n            throw new Error(errorMessage);\r\n          });\r\n        }\r\n      })\r\n      .then((data) => {\r\n        props.onLogin(data.idToken);\r\n        localStorage.setItem(\"token\", data.idToken);\r\n        history.replace(\"/home\");\r\n      })\r\n      .catch((err) => {\r\n        setIsLoading(false);\r\n        setError(err.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {error !== \"\" && <ErrorOverlay text={error} onConfirm={confirmHandler} />}\r\n      <div className={classes.container}>\r\n        <form className={classes.questions} onSubmit={submitHandler}>\r\n          <h3>Please enter your email address :</h3>\r\n          <br />\r\n          <input type=\"text\" ref={emailInputRef} />\r\n          <br />\r\n          <br />\r\n          <h3>Please enter your password :</h3>\r\n          <br />\r\n          <input type=\"password\" ref={passwordInputRef} />\r\n          <br />\r\n          <br />\r\n          <label>\r\n            Please make sure that you type the correct registered Email Address,\r\n          </label>\r\n          <br />\r\n          <label>As well as your correct Password.</label>\r\n          <br />\r\n          <br />\r\n          {!isLoading && <button className={classes.btn}>Log Me In !</button>}\r\n          {isLoading && <LoadingSpinner />}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}